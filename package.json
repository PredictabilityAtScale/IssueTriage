{
  "name": "issuetriage",
  "displayName": "IssueTriage",
  "description": "An automated issue triage for risk and readiness assessment",
  "publisher": "PredictabilityAtScale",
  "version": "0.0.1",
  "repository": {
    "type": "git",
    "url": "https://github.com/PredictabilityAtScale/IssueTriage.git"
  },
  "engines": {
    "vscode": "^1.105.0"
  },
  "categories": [
    "Other"
  ],
  "main": "./dist/extension.js",
  "activationEvents": [
    "onStartupFinished"
  ],
  "contributes": {
    "commands": [
      {
        "command": "issuetriage.openPanel",
        "title": "Issue Triage: Open Panel",
        "category": "Issue Triage",
        "icon": "$(layout-sidebar-right)"
      },
      {
        "command": "issuetriage.connectRepository",
        "title": "Issue Triage: Connect Repository",
        "category": "Issue Triage"
      },
      {
        "command": "issuetriage.changeRepository",
        "title": "Issue Triage: Change Repository",
        "category": "Issue Triage"
      },
      {
        "command": "issuetriage.refreshIssues",
        "title": "Issue Triage: Refresh Issues",
        "category": "Issue Triage",
        "icon": "$(refresh)"
      },
      {
        "command": "issuetriage.assessIssue",
        "title": "Issue Triage: Assess Selected Issue",
        "category": "Issue Triage",
        "icon": "$(pulse)"
      },
      {
        "command": "issuetriage.runContextTool",
        "title": "Issue Triage: Run Context Tool",
        "category": "Issue Triage"
      },
      {
        "command": "issuetriage.backfillKeywords",
        "title": "Issue Triage: Backfill Keywords",
        "category": "Issue Triage"
      },
      {
        "command": "issuetriage.trainModel",
        "title": "Issue Triage: Export Training Dataset",
        "category": "Issue Triage"
      },
      {
        "command": "issuetriage.signOut",
        "title": "Issue Triage: Sign Out",
        "category": "Issue Triage"
      },
      {
        "command": "issuetriage.sendToAutomation",
        "title": "Issue Triage: Send to Automation",
        "category": "Issue Triage",
        "icon": "$(rocket)"
      },
      {
        "command": "issuetriage.filterByReadiness",
        "title": "Issue Triage: Toggle Readiness Filter",
        "category": "Issue Triage",
        "icon": "$(filter)"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "issuetriage",
          "title": "Issue Triage",
          "icon": "resources/icon.svg"
        }
      ]
    },
    "views": {
      "issuetriage": [
        {
          "id": "issuetriage.issuesView",
          "name": "Issues",
          "contextualTitle": "Issue Triage"
        },
        {
          "id": "issuetriage.matrixOverview",
          "name": "Opportunity Mix",
          "contextualTitle": "Opportunity Mix",
          "type": "webview",
          "icon": "resources/icon.svg"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "issuetriage.openPanel",
          "when": "view == issuetriage.issuesView",
          "group": "navigation@1",
          "icon": "$(open-preview)"
        },
        {
          "command": "issuetriage.refreshIssues",
          "when": "view == issuetriage.issuesView",
          "group": "navigation@2",
          "icon": "$(refresh)"
        }
      ],
      "view/item/context": [
        {
          "command": "issuetriage.assessIssue",
          "when": "view == issuetriage.issuesView && viewItem == issueNotAssessed",
          "group": "inline@1",
          "icon": "$(pulse)"
        },
        {
          "command": "issuetriage.sendToAutomation",
          "when": "view == issuetriage.issuesView && viewItem == issueReady",
          "group": "inline@1",
          "icon": "$(rocket)"
        }
      ]
    },
    "configuration": {
      "title": "IssueTriage",
      "properties": {
        "issuetriage.telemetry.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable IssueTriage telemetry collection to improve automation readiness insights."
        },
        "issuetriage.github.defaultRepository": {
          "type": "string",
          "default": "",
          "description": "Default owner/repository slug to preload when connecting to GitHub."
        },
        "issuetriage.github.orgFilter": {
          "type": "string",
          "default": "",
          "description": "Optional organization login used to filter the repository list when connecting to GitHub."
        },
        "issuetriage.github.oauthClientId": {
          "type": "string",
          "default": "",
          "markdownDescription": "GitHub OAuth application client ID used for device code authentication. Can be provided via the `ISSUETRIAGE_GITHUB_CLIENT_ID` environment variable."
        },
        "issuetriage.github.oauthClientSecret": {
          "type": "string",
          "default": "",
          "markdownDescription": "GitHub OAuth application client secret used for device code authentication. Prefer setting the `ISSUETRIAGE_GITHUB_CLIENT_SECRET` environment variable instead of storing the secret in settings."
        },
        "issuetriage.assessment.apiKey": {
          "type": "string",
          "default": "",
          "markdownDescription": "OpenRouter API key used for assessments. Prefer the `ISSUETRIAGE_OPENROUTER_API_KEY` environment variable for local development."
        },
        "issuetriage.assessment.llmMode": {
          "type": "string",
          "enum": [
            "local",
            "remote"
          ],
          "default": "local",
          "markdownDescription": "Controls whether IssueTriage calls OpenRouter directly (`local`) or routes requests through the configured proxy (`remote`). Override via the `ISSUETRIAGE_LLM_MODE` environment variable."
        },
        "issuetriage.assessment.remoteEndpoint": {
          "type": "string",
          "default": "",
          "markdownDescription": "Base URL for the IssueTriage LLM proxy when `llmMode` is set to `remote` (for example, `https://issue-triage-worker.troy-magennis.workers.dev`). Override via the `ISSUETRIAGE_LLM_REMOTE_URL` environment variable."
        },
        "issuetriage.assessment.standardModel": {
          "type": "string",
          "default": "openai/gpt-5-mini",
          "description": "Model identifier used for standard assessments (OpenAI or OpenRouter-formatted)."
        },
        "issuetriage.assessment.premiumModel": {
          "type": "string",
          "default": "openai/gpt-5",
          "description": "Model identifier used when premium mode is enabled (OpenAI or OpenRouter-formatted)."
        },
        "issuetriage.assessment.usePremiumModel": {
          "type": "boolean",
          "default": false,
          "description": "When true, use the premium assessment model (requires appropriate OpenRouter access)."
        },
        "issuetriage.assessment.publishComments": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Post or update a single IssueTriage assessment comment on the GitHub issue after each run."
        },
        "issuetriage.assessment.preferredModel": {
          "type": "string",
          "default": "openai/gpt-5-mini",
          "markdownDescription": "Preferred OpenRouter model identifier used for initial assessments."
        },
        "issuetriage.risk.lookbackDays": {
          "type": "number",
          "default": 180,
          "minimum": 7,
          "description": "Number of days of history IssueTriage analyzes when computing risk intelligence."
        },
        "issuetriage.risk.labelFilters": {
          "type": "array",
          "default": [],
          "markdownDescription": "Only hydrate risk intelligence for issues containing one of the provided labels. Leave empty to include all issues.",
          "items": {
            "type": "string"
          }
        },
        "issuetriage.cliTools": {
          "type": "array",
          "default": [],
          "markdownDescription": "Configure additional CLI context tools IssueTriage can execute. Values support ${workspaceRoot}, ${workspaceFolder}, and ${extensionRoot} tokens.",
          "items": {
            "type": "object",
            "required": [
              "id",
              "command"
            ],
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier used to reference the tool."
              },
              "title": {
                "type": "string",
                "description": "Friendly name displayed in QuickPick lists."
              },
              "description": {
                "type": "string",
                "description": "Optional description for the run picker."
              },
              "command": {
                "type": "string",
                "description": "Executable or script to run."
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments passed to the command."
              },
              "cwd": {
                "type": "string",
                "description": "Working directory for the process. Defaults to the workspace root."
              },
              "env": {
                "type": "object",
                "description": "Environment variables injected into the process. Values support token replacement.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "enabled": {
                "type": "boolean",
                "default": true,
                "description": "Disable the tool without removing its configuration."
              },
              "autoRun": {
                "type": "boolean",
                "description": "Automatically run the tool before assessments."
              },
              "refreshIntervalMs": {
                "type": "number",
                "minimum": 0,
                "description": "Minimum milliseconds between automatic runs."
              },
              "timeoutMs": {
                "type": "number",
                "minimum": 0,
                "description": "Maximum runtime (milliseconds) before IssueTriage terminates the process."
              },
              "shell": {
                "type": "boolean",
                "description": "Run the command through the system shell."
              },
              "outputType": {
                "type": "string",
                "enum": [
                  "text",
                  "json"
                ],
                "default": "text",
                "description": "Treat stdout as plain text or JSON for parsing."
              }
            }
          }
        },
        "issuetriage.automation.launchEnabled": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Enable guarded automation launch workflows once automation configuration is complete."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "dependencies": {
    "@octokit/core": "^6.1.2",
    "@octokit/plugin-paginate-rest": "^11.4.0",
    "dotenv": "^16.4.5",
    "sql.js": "^1.9.0"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "22.x",
    "@types/vscode": "^1.105.0",
    "@typescript-eslint/eslint-plugin": "^8.45.0",
    "@typescript-eslint/parser": "^8.45.0",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "esbuild": "^0.25.10",
    "eslint": "^9.36.0",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.9.3"
  }
}
